#include settings/binning/example.cfg as binning
#include settings/osc/nufitv20.cfg as osc
#include settings/osc/earth.cfg as earth

[pipeline]

order = data.toy_event_generator
param_selections = nh
name = neutrinos

output_binning = reco_binning_pid_mainz_tpa25
output_key = weights

[data.toy_event_generator]

calc_mode = events
apply_mode = events

n_events = 1000
seed = 666
energy_range = (1, 10) # in GeV
coszen_range = (-1, 0)
spectral_index = 1
add_fluxes = Honda
aeff_energy_param = aeff/vlvnt_aeff_energy_param.json
aeff_coszen_param = aeff/vlvnt_aeff_coszen_param.json
reco_param = reco/vlvnt_reco_param.json
pid_param = pid/vlvnt_pid_energy_param.json
pid_dist = discrete

output_names = nue_cc, numu_cc, nutau_cc, nuebar_cc, numubar_cc, nutaubar_cc, nue_nc, numu_nc, nutau_nc, nuebar_nc, numubar_nc, nutaubar_nc

data_dict = {
    'true_energy': 'true_energy',
    'true_coszen': 'true_coszen',
    'reco_energy': 'reco_energy',
    'reco_coszen': 'reco_coszen',
    'pid': 'pid',
    'weighted_aeff': 'weighted_aeff'
    }
#    'nu_flux_nominal': ['nominal_nue_flux', 'nominal_numu_flux'],
#    'nubar_flux_nominal': ['nominal_nuebar_flux', 'nominal_numubar_flux']


[utils.hist]

calc_mode = events
apply_mode = reco_binning_pid_mainz_tpa25

# Specify if and how to assign uncertainties to the output maps,
# here sum of weights-squared
error_method = sumw2
